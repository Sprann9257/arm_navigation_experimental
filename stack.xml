<stack>
  <description brief="arm_navigation">
    The arm navigation stack contains the action/behavior used to execute collision free motion planning and control for a robot arm manipulator. Included in this stack are the messages required for an action interface that can be used to specify and abort goals for the move_arm action. An implementation for arm navigation on the PR2 robot can be found in the pr2_arm_navigation stack. 
  </description>
  <author>Maintained by Sachin Chitta</author>
  <license>BSD</license>  
  <review status="unreviewed" notes=""/>
  <url>http://ros.org/wiki/arm_navigation_experimental</url>
  <depend stack="arm_navigation" /> <!-- planning_environment, planning_models, spline_smoother, robot_self_filter, kinematics_msgs, collision_space, geometric_shapes, arm_navigation_msgs -->
  <depend stack="bullet" /> <!-- bullet -->
  <depend stack="common" /> <!-- actionlib -->
  <depend stack="common_msgs" /> <!-- geometry_msgs, actionlib_msgs, trajectory_msgs, sensor_msgs, visualization_msgs -->
  <depend stack="control" /> <!-- control_msgs -->
  <depend stack="eigen" /> <!-- eigen -->
  <depend stack="filters" /> <!-- filters -->
  <depend stack="geometry" /> <!-- tf, tf_conversions, angles -->
  <depend stack="image_common" /> <!-- image_transport -->
  <depend stack="octomap_mapping" /> <!-- octomap, octomap_ros -->
  <depend stack="orocos_kinematics_dynamics" /> <!-- kdl -->
  <depend stack="perception_pcl" /> <!-- pcl, pcl_ros -->
  <depend stack="pluginlib" /> <!-- pluginlib -->
  <depend stack="pr2_controllers" /> <!-- pr2_controllers_msgs -->
  <depend stack="robot_model" /> <!-- kdl_parser -->
  <depend stack="ros" />
  <depend stack="ros_comm" /> <!-- std_msgs, rosconsole, rospy, roscpp, std_srvs -->
  <depend stack="vision_opencv" /> <!-- image_geometry -->

</stack>
